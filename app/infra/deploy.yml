#- name: Deploy Java App with Docker
#  hosts: deployment
#  become: yes
#  tasks:
#    - name: Ensure Docker is installed
#      apt:
#        name: docker.io
#        state: present
#        update_cache: true
#
#    - name: Log in to Docker Hub
#      community.docker.docker_login:
#        username: "pratster20"
#        password: "Upendra1$"
#
#    - name: Pull latest image from Docker Hub
#      community.docker.docker_image:
#        name: pratster20/miniproj_image1
#        tag: "1.0"
#        source: pull
#
#    - name: Stop old container if exists
#      community.docker.docker_container:
#        name: miniproj-app
#        state: absent
#        force_kill: true
#
#    - name: Run new container
#      community.docker.docker_container:
#        name: miniproj-app
#        image: pratster20/miniproj_image1:1.0
#        state: started
#        restart_policy: always
#        ports:
#          - "8080:8080"
#        interactive: yes
#        tty: yes


#- name: Deploy Docker container locally
#  hosts: local
#  become: false   # optional if docker needs sudo
#  tasks:
#    - name: Pull latest Docker image
#      shell: docker pull pratster20/miniproj_image1:1.0
#
#    - name: Stop existing container (if any)
#      shell: docker stop myapp || true
#
#    - name: Remove existing container (if any)
#      shell: docker rm myapp || true
#
#    - name: Run the Docker container
#      shell: docker run -d --name myapp -p 8081:8080 pratster20/miniproj_image1:1.0


- name: Deploy Java App with Docker
  hosts: local
  become: no
  tasks:
    - name: Ensure Docker is installed
      ansible.builtin.apt:
        name: docker.io
        state: present
        update_cache: true

    - name: Log in to Docker Hub
      community.docker.docker_login:
        username: "pratster20"
        # NOTE: Hardcoding passwords is not recommended; use Ansible Vault for secrets.
        password: "Upendra1$"

    - name: Pull latest image from Docker Hub
      community.docker.docker_image:
        name: pratster20/miniproj_image1
        tag: "1.0"
        source: pull

    - name: Stop and remove old container if exists
      community.docker.docker_container:
        name: miniproj-app
        state: absent
        force_kill: true

    - name: Run new container in interactive mode
      community.docker.docker_container:
        name: miniproj-app
        image: pratster20/miniproj_image1:1.0
        state: started
        # Sets the restart policy for background services
        restart_policy: always
        ports:
          # Host Port (8081) is mapped to the Container Port (8080)
          # to avoid conflict with Jenkins running on port 8080.
          - "8081:8080"
        interactive: yes
        tty: yes
        # IMPORTANT: 'interactive: yes' and 'tty: yes' are removed
        # because they cause failures when run by Ansible (a non-interactive tool).

